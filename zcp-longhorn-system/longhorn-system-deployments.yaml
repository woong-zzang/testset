apiVersion: v1
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        driver.longhorn.io/git-commit: 6856fd35ee1739f517b78be9e1c6df38171be458
        driver.longhorn.io/kubernetes-version: v1.24.16+rke2r1
        driver.longhorn.io/version: v1.4.2
        longhorn.io/last-applied-tolerations: '[]'
      labels:
        app: csi-attacher
        longhorn.io/managed-by: longhorn-manager
      name: csi-attacher
      namespace: longhorn-system
    spec:
      replicas: 3
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: csi-attacher
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: csi-attacher
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - csi-attacher
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - args:
                - --v=2
                - --csi-address=$(ADDRESS)
                - --timeout=1m50s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: rancher/mirrored-longhornio-csi-attacher:v3.4.0
              imagePullPolicy: IfNotPresent
              name: csi-attacher
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
          volumes:
            - hostPath:
                path: /var/lib/kubelet/plugins/driver.longhorn.io
                type: DirectoryOrCreate
              name: socket-dir
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        driver.longhorn.io/git-commit: 6856fd35ee1739f517b78be9e1c6df38171be458
        driver.longhorn.io/kubernetes-version: v1.24.16+rke2r1
        driver.longhorn.io/version: v1.4.2
        longhorn.io/last-applied-tolerations: '[]'
      labels:
        app: csi-provisioner
        longhorn.io/managed-by: longhorn-manager
      name: csi-provisioner
      namespace: longhorn-system
    spec:
      replicas: 3
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: csi-provisioner
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: csi-provisioner
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - csi-provisioner
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - args:
                - --v=2
                - --csi-address=$(ADDRESS)
                - --timeout=1m50s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
                - --default-fstype=ext4
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: rancher/mirrored-longhornio-csi-provisioner:v2.1.2
              imagePullPolicy: IfNotPresent
              name: csi-provisioner
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
          volumes:
            - hostPath:
                path: /var/lib/kubelet/plugins/driver.longhorn.io
                type: DirectoryOrCreate
              name: socket-dir
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        driver.longhorn.io/git-commit: 6856fd35ee1739f517b78be9e1c6df38171be458
        driver.longhorn.io/kubernetes-version: v1.24.16+rke2r1
        driver.longhorn.io/version: v1.4.2
        longhorn.io/last-applied-tolerations: '[]'
      labels:
        app: csi-resizer
        longhorn.io/managed-by: longhorn-manager
      name: csi-resizer
      namespace: longhorn-system
    spec:
      replicas: 3
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: csi-resizer
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: csi-resizer
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - csi-resizer
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - args:
                - --v=2
                - --csi-address=$(ADDRESS)
                - --timeout=1m50s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
                - --leader-election-namespace=$(POD_NAMESPACE)
                - --handle-volume-inuse-error=false
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: rancher/mirrored-longhornio-csi-resizer:v1.3.0
              imagePullPolicy: IfNotPresent
              name: csi-resizer
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
          volumes:
            - hostPath:
                path: /var/lib/kubelet/plugins/driver.longhorn.io
                type: DirectoryOrCreate
              name: socket-dir
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "1"
        driver.longhorn.io/git-commit: 6856fd35ee1739f517b78be9e1c6df38171be458
        driver.longhorn.io/kubernetes-version: v1.24.16+rke2r1
        driver.longhorn.io/version: v1.4.2
        longhorn.io/last-applied-tolerations: '[]'
      labels:
        app: csi-snapshotter
        longhorn.io/managed-by: longhorn-manager
      name: csi-snapshotter
      namespace: longhorn-system
    spec:
      replicas: 3
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: csi-snapshotter
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: csi-snapshotter
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - csi-snapshotter
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - args:
                - --v=2
                - --csi-address=$(ADDRESS)
                - --timeout=1m50s
                - --leader-election
                - --leader-election-namespace=$(POD_NAMESPACE)
              env:
                - name: ADDRESS
                  value: /csi/csi.sock
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: rancher/mirrored-longhornio-csi-snapshotter:v5.0.1
              imagePullPolicy: IfNotPresent
              name: csi-snapshotter
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /csi/
                  name: socket-dir
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
          volumes:
            - hostPath:
                path: /var/lib/kubelet/plugins/driver.longhorn.io
                type: DirectoryOrCreate
              name: socket-dir
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "2"
        meta.helm.sh/release-name: longhorn
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app: longhorn-admission-webhook
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.2
        helm.sh/chart: longhorn-102.2.1_up1.4.2
      name: longhorn-admission-webhook
      namespace: longhorn-system
    spec:
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: longhorn-admission-webhook
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-01-05T18:14:33+09:00"
          creationTimestamp: null
          labels:
            app: longhorn-admission-webhook
            app.kubernetes.io/instance: longhorn
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: longhorn
            app.kubernetes.io/version: v1.4.2
            helm.sh/chart: longhorn-102.2.1_up1.4.2
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - longhorn-admission-webhook
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - command:
                - longhorn-manager
                - admission-webhook
                - --service-account
                - longhorn-service-account
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
              image: rancher/mirrored-longhornio-longhorn-manager:v1.4.2
              imagePullPolicy: IfNotPresent
              name: longhorn-admission-webhook
              ports:
                - containerPort: 9443
                  name: admission-wh
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 9443
                timeoutSeconds: 1
              resources: {}
              securityContext:
                runAsUser: 2000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          initContainers:
            - command:
                - sh
                - -c
                - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" -k https://longhorn-conversion-webhook:9443/v1/healthz) != "200" ]; do echo waiting; sleep 2; done
              image: rancher/mirrored-longhornio-longhorn-manager:v1.4.2
              imagePullPolicy: IfNotPresent
              name: wait-longhorn-conversion-webhook
              resources: {}
              securityContext:
                runAsUser: 2000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "2"
        meta.helm.sh/release-name: longhorn
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app: longhorn-conversion-webhook
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.2
        helm.sh/chart: longhorn-102.2.1_up1.4.2
      name: longhorn-conversion-webhook
      namespace: longhorn-system
    spec:
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: longhorn-conversion-webhook
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-01-05T18:14:32+09:00"
          creationTimestamp: null
          labels:
            app: longhorn-conversion-webhook
            app.kubernetes.io/instance: longhorn
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: longhorn
            app.kubernetes.io/version: v1.4.2
            helm.sh/chart: longhorn-102.2.1_up1.4.2
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - longhorn-conversion-webhook
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - command:
                - longhorn-manager
                - conversion-webhook
                - --service-account
                - longhorn-service-account
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
              image: rancher/mirrored-longhornio-longhorn-manager:v1.4.2
              imagePullPolicy: IfNotPresent
              name: longhorn-conversion-webhook
              ports:
                - containerPort: 9443
                  name: conversion-wh
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 9443
                timeoutSeconds: 1
              resources: {}
              securityContext:
                runAsUser: 2000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "2"
        meta.helm.sh/release-name: longhorn
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.2
        helm.sh/chart: longhorn-102.2.1_up1.4.2
      name: longhorn-driver-deployer
      namespace: longhorn-system
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: longhorn-driver-deployer
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-01-05T18:14:31+09:00"
          creationTimestamp: null
          labels:
            app: longhorn-driver-deployer
            app.kubernetes.io/instance: longhorn
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: longhorn
            app.kubernetes.io/version: v1.4.2
            helm.sh/chart: longhorn-102.2.1_up1.4.2
        spec:
          containers:
            - command:
                - longhorn-manager
                - -d
                - deploy-driver
                - --manager-image
                - rancher/mirrored-longhornio-longhorn-manager:v1.4.2
                - --manager-url
                - http://longhorn-backend:9500/v1
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: SERVICE_ACCOUNT
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.serviceAccountName
                - name: CSI_ATTACHER_IMAGE
                  value: rancher/mirrored-longhornio-csi-attacher:v3.4.0
                - name: CSI_PROVISIONER_IMAGE
                  value: rancher/mirrored-longhornio-csi-provisioner:v2.1.2
                - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
                  value: rancher/mirrored-longhornio-csi-node-driver-registrar:v2.5.0
                - name: CSI_RESIZER_IMAGE
                  value: rancher/mirrored-longhornio-csi-resizer:v1.3.0
                - name: CSI_SNAPSHOTTER_IMAGE
                  value: rancher/mirrored-longhornio-csi-snapshotter:v5.0.1
                - name: CSI_LIVENESS_PROBE_IMAGE
                  value: rancher/mirrored-longhornio-livenessprobe:v2.8.0
              image: rancher/mirrored-longhornio-longhorn-manager:v1.4.2
              imagePullPolicy: IfNotPresent
              name: longhorn-driver-deployer
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          initContainers:
            - command:
                - sh
                - -c
                - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1) != "200" ]; do echo waiting; sleep 2; done
              image: rancher/mirrored-longhornio-longhorn-manager:v1.4.2
              imagePullPolicy: IfNotPresent
              name: wait-longhorn-manager
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            runAsUser: 0
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "2"
        meta.helm.sh/release-name: longhorn
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app: longhorn-recovery-backend
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.2
        helm.sh/chart: longhorn-102.2.1_up1.4.2
      name: longhorn-recovery-backend
      namespace: longhorn-system
    spec:
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: longhorn-recovery-backend
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-01-05T18:14:30+09:00"
          creationTimestamp: null
          labels:
            app: longhorn-recovery-backend
            app.kubernetes.io/instance: longhorn
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: longhorn
            app.kubernetes.io/version: v1.4.2
            helm.sh/chart: longhorn-102.2.1_up1.4.2
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - longhorn-recovery-backend
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - command:
                - longhorn-manager
                - recovery-backend
                - --service-account
                - longhorn-service-account
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
              image: rancher/mirrored-longhornio-longhorn-manager:v1.4.2
              imagePullPolicy: IfNotPresent
              name: longhorn-recovery-backend
              ports:
                - containerPort: 9600
                  name: recov-backend
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 5
                successThreshold: 1
                tcpSocket:
                  port: 9600
                timeoutSeconds: 1
              resources: {}
              securityContext:
                runAsUser: 2000
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: longhorn-service-account
          serviceAccountName: longhorn-service-account
          terminationGracePeriodSeconds: 30
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "2"
        meta.helm.sh/release-name: longhorn
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app: longhorn-ui
        app.kubernetes.io/instance: longhorn
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: longhorn
        app.kubernetes.io/version: v1.4.2
        helm.sh/chart: longhorn-102.2.1_up1.4.2
      name: longhorn-ui
      namespace: longhorn-system
    spec:
      replicas: 2
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: longhorn-ui
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-01-05T18:14:29+09:00"
          creationTimestamp: null
          labels:
            app: longhorn-ui
            app.kubernetes.io/instance: longhorn
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: longhorn
            app.kubernetes.io/version: v1.4.2
            helm.sh/chart: longhorn-102.2.1_up1.4.2
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app
                          operator: In
                          values:
                            - longhorn-ui
                    topologyKey: kubernetes.io/hostname
                  weight: 1
          containers:
            - env:
                - name: LONGHORN_MANAGER_IP
                  value: http://longhorn-backend:9500
                - name: LONGHORN_UI_PORT
                  value: "8000"
              image: rancher/mirrored-longhornio-longhorn-ui:v1.4.2
              imagePullPolicy: IfNotPresent
              name: longhorn-ui
              ports:
                - containerPort: 8000
                  name: http
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/cache/nginx/
                  name: nginx-cache
                - mountPath: /var/config/nginx/
                  name: nginx-config
                - mountPath: /var/run/
                  name: var-run
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: nginx-cache
            - emptyDir: {}
              name: nginx-config
            - emptyDir: {}
              name: var-run
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "7"
        meta.helm.sh/release-name: nfs-subdir-external-provisioner
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app: nfs-subdir-external-provisioner
        app.kubernetes.io/managed-by: Helm
        chart: nfs-subdir-external-provisioner-4.0.18
        heritage: Helm
        release: nfs-subdir-external-provisioner
      name: nfs-subdir-external-provisioner
      namespace: longhorn-system
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: nfs-subdir-external-provisioner
          release: nfs-subdir-external-provisioner
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-03-15T09:43:56+09:00"
          creationTimestamp: null
          labels:
            app: nfs-subdir-external-provisioner
            release: nfs-subdir-external-provisioner
        spec:
          containers:
            - env:
                - name: PROVISIONER_NAME
                  value: cluster.local/nfs-subdir-external-provisioner
                - name: NFS_SERVER
                  value: 192.168.10.60
                - name: NFS_PATH
                  value: /coldzone
              image: v2-zcr.cloudzcp.io/osc/sig-storage/nfs-subdir-external-provisioner:v4.0.2
              imagePullPolicy: IfNotPresent
              name: nfs-subdir-external-provisioner
              resources: {}
              securityContext: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /persistentvolumes
                  name: nfs-subdir-external-provisioner-root
          dnsPolicy: ClusterFirst
          nodeSelector:
            role: osd
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: nfs-subdir-external-provisioner
          serviceAccountName: nfs-subdir-external-provisioner
          terminationGracePeriodSeconds: 30
          tolerations:
            - effect: NoSchedule
              key: osd
              operator: Equal
              value: "true"
          volumes:
            - name: nfs-subdir-external-provisioner-root
              nfs:
                path: /coldzone
                server: 192.168.10.60
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        deployment.kubernetes.io/revision: "3"
        meta.helm.sh/release-name: nfs-subdir-external-provisioner2
        meta.helm.sh/release-namespace: longhorn-system
      labels:
        app: nfs-subdir-external-provisioner
        app.kubernetes.io/managed-by: Helm
        chart: nfs-subdir-external-provisioner-4.0.18
        heritage: Helm
        release: nfs-subdir-external-provisioner2
      name: nfs-subdir-external-provisioner2
      namespace: longhorn-system
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: nfs-subdir-external-provisioner
          release: nfs-subdir-external-provisioner2
      template:
        metadata:
          annotations:
            kubectl.kubernetes.io/restartedAt: "2024-03-15T09:43:55+09:00"
          creationTimestamp: null
          labels:
            app: nfs-subdir-external-provisioner
            release: nfs-subdir-external-provisioner2
        spec:
          containers:
            - env:
                - name: PROVISIONER_NAME
                  value: cluster.local/nfs-subdir-external-provisioner2
                - name: NFS_SERVER
                  value: 192.168.10.60
                - name: NFS_PATH
                  value: /longhorn_backup
              image: v2-zcr.cloudzcp.io/osc/sig-storage/nfs-subdir-external-provisioner:v4.0.2
              imagePullPolicy: IfNotPresent
              name: nfs-subdir-external-provisioner
              resources: {}
              securityContext: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /persistentvolumes
                  name: nfs-subdir-external-provisioner-root
          dnsPolicy: ClusterFirst
          nodeSelector:
            role: osd
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: nfs-subdir-external-provisioner2
          serviceAccountName: nfs-subdir-external-provisioner2
          terminationGracePeriodSeconds: 30
          tolerations:
            - effect: NoSchedule
              key: osd
              operator: Equal
              value: "true"
          volumes:
            - name: nfs-subdir-external-provisioner-root
              nfs:
                path: /longhorn_backup
                server: 192.168.10.60
kind: List
metadata:
  resourceVersion: ""
